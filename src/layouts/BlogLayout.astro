---
import Footer from '@/components/Footer.astro';
import Header from '@/components/Header.astro';
import BlogSEO from '@/components/BlogSEO.astro';
import TableOfContents from '@/components/TableOfContents.astro';
import type { CollectionEntry } from 'astro:content';
import type { ProcessedBlogPost } from '@/types/strapi';

export interface Props {
  post: CollectionEntry<'blog'> | ProcessedBlogPost;
}

const { post } = Astro.props as Props;

// Helper function to check if it's a Strapi post
const isStrapiPost = (post: any): post is ProcessedBlogPost => {
  return post.id !== undefined && typeof post.id === 'number';
};

let Content: any;
let headings: any[] = [];

// Handle content rendering based on post type
if (isStrapiPost(post)) {
  // For Strapi posts, get the processed content and headings
  const renderResult = await post.render();
  Content = renderResult.Content;
  headings = renderResult.headings || [];
} else {
  // For Astro collection posts
  const renderResult = await post.render();
  Content = renderResult.Content;
  headings = renderResult.headings;
}

// Format date for display
const formatDate = (date: Date) => {
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
};

// Calculate estimated reading time if not provided
const estimateReadingTime = (content: string): number => {
  const wordsPerMinute = 200;
  const words = content.trim().split(/\s+/).length;
  return Math.ceil(words / wordsPerMinute);
};

const readingTime = post.data.readingTime || estimateReadingTime(post.body);
---

<html lang="en" class="scroll-smooth">
  <head>
    <BlogSEO
      title={post.data.seo?.metaTitle || post.data.title}
      description={post.data.seo?.metaDescription || post.data.description}
      pubDate={post.data.pubDate}
      updatedDate={post.data.updatedDate}
      category={post.data.category}
      tags={post.data.tags}
      author={post.data.author}
      heroImage={post.data.heroImage}
      heroImageAlt={post.data.heroImageAlt}
      ogImage={post.data.seo?.ogImage}
      readingTime={readingTime}
      slug={post.slug}
    />
  </head>
  <body class="bg-background min-h-screen font-sans antialiased">
    <div class="relative flex min-h-screen flex-col">
      <Header />
      
      <!-- Skip to content link for accessibility -->
      <a 
        href="#main-content" 
        class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 bg-primary text-primary-foreground px-4 py-2 rounded z-50"
      >
        Skip to main content
      </a>

      <main id="main-content" class="flex-auto">
        <section class="py-16">
          <div class="container">
            <!-- Breadcrumb Navigation -->
            <nav class="mb-6" aria-label="Breadcrumb">
              <ol class="flex items-center space-x-2 text-sm text-muted-foreground">
                <li>
                  <a href="/" class="flex items-center hover:text-foreground transition-colors">
                    <svg class="h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"/>
                    </svg>
                  </a>
                </li>
                <li class="flex items-center">
                  <svg class="w-4 h-4 mx-1" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
                  </svg>
                  <a href="/blog" class="hover:text-foreground transition-colors">
                    Blog
                  </a>
                </li>
                <li class="flex items-center">
                  <svg class="w-4 h-4 mx-1" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path>
                  </svg>
                  <span class="text-foreground">{post.data.title}</span>
                </li>
              </ol>
            </nav>

            <!-- Article Header -->
            <header class="mb-8">
              <!-- Category Badge -->
              <div class="mb-4">
                <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-primary/10 text-primary capitalize">
                  {post.data.category}
                </span>
              </div>

              <!-- Title -->
              <h1 class="mb-4 text-3xl font-bold tracking-tight md:text-4xl lg:text-5xl">
                {post.data.title}
              </h1>

              <!-- Article Meta -->
              <div class="flex items-center gap-6 text-sm text-muted-foreground mb-4">
                <div class="flex items-center gap-3">
                  <div class="h-8 w-8 rounded-full border bg-primary/10 flex items-center justify-center">
                    <span class="text-primary font-medium text-sm">
                      {post.data.author.charAt(0)}
                    </span>
                  </div>
                  <span class="font-medium text-foreground">{post.data.author}</span>
                </div>
                <time datetime={post.data.pubDate.toISOString()}>
                  {formatDate(post.data.pubDate)}
                </time>
                <span>{readingTime} min read</span>
              </div>

              <!-- Description -->
              <p class="text-lg text-muted-foreground leading-relaxed">
                {post.data.description}
              </p>
            </header>

            <!-- Main Grid Layout -->
            <div class="relative mt-12 grid gap-14 lg:mt-14 lg:grid-cols-12 lg:gap-6">
              <!-- Main Content -->
              <div class="order-2 lg:order-none lg:col-span-8">
                <!-- Hero Image -->
                {post.data.heroImage && (
                  <div class="mb-8">
                    <img
                      src={post.data.heroImage}
                      alt={post.data.heroImageAlt || post.data.title}
                      class="mb-4 mt-0 aspect-video w-full rounded-lg border object-cover"
                      loading="eager"
                      decoding="async"
                      width="800"
                      height="400"
                    />
                  </div>
                )}

                <!-- Article Content -->
                <article class="prose prose-lg dark:prose-invert max-w-none">
                  {isStrapiPost(post) ? (
                    <div set:html={post.body} />
                  ) : (
                    <Content />
                  )}
                </article>

                <!-- Article Footer -->
                {post.data.tags && post.data.tags.length > 0 && (
                  <footer class="mt-12 pt-8 border-t border-border">
                    <div class="mb-6">
                      <h3 class="text-sm font-medium text-muted-foreground mb-3">Tagged with:</h3>
                      <div class="flex flex-wrap gap-2">
                        {post.data.tags.map((tag: string) => (
                          <span class="inline-flex items-center px-3 py-1 rounded-full text-sm bg-muted text-muted-foreground hover:bg-muted/80 transition-colors">
                            #{tag}
                          </span>
                        ))}
                      </div>
                    </div>
                  </footer>
                )}
              </div>

              <!-- Sidebar with Table of Contents -->
              {headings.length > 0 && (
                <TableOfContents headings={headings} />
              )}
            </div>
          </div>
        </section>

        <!-- Related Posts Section (placeholder for future implementation) -->
        {post.data.relatedPosts && post.data.relatedPosts.length > 0 && (
          <section class="bg-muted/50 py-16">
            <div class="container max-w-4xl mx-auto">
              <h2 class="text-2xl font-bold mb-8 text-center">Related Articles</h2>
              <p class="text-center text-muted-foreground">
                Related posts functionality will be implemented soon.
              </p>
              <!-- Related posts will be implemented later -->
            </div>
          </section>
        )}
      </main>

      <Footer />
    </div>
  </body>
</html>

<style>
  /* Enhanced focus styles for accessibility */
  :focus-visible {
    outline: 2px solid hsl(var(--primary));
    outline-offset: 2px;
  }
  
  /* Smooth scroll behavior */
  @media (prefers-reduced-motion: no-preference) {
    html {
      scroll-behavior: smooth;
    }
  }

  /* Ensure proper prose styling for Strapi content */
  .prose {
    color: hsl(var(--foreground));
  }
  
  .prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
    color: hsl(var(--foreground));
    font-weight: 600;
  }
  
  .prose a {
    color: hsl(var(--primary));
    text-decoration: underline;
  }
  
  .prose a:hover {
    text-decoration: none;
  }
  
  .prose blockquote {
    border-left: 4px solid hsl(var(--primary));
    padding-left: 1rem;
    font-style: italic;
    color: hsl(var(--muted-foreground));
  }
  
  .prose code {
    background-color: hsl(var(--muted));
    padding: 0.125rem 0.25rem;
    border-radius: 0.25rem;
    font-size: 0.875em;
  }
  
  .prose pre {
    background-color: hsl(var(--muted));
    padding: 1rem;
    border-radius: 0.5rem;
    overflow-x: auto;
  }
  
  .prose pre code {
    background-color: transparent;
    padding: 0;
  }
</style> 